An object-oriented paradigm is to design the program using classes and objects. 
Class refers to blueprint of an entity and the object is related to real-word entities such as person, house etc. 

OOP allows for more structured and reusable code, making it easier to manage and scale.


Characteristics of an object-oriented programming -
=================================================
These features of OOP help to organize code in a modular, reusable, and easy-to-maintain manner.

1. Class
2. Object
3. Method
4. Inheritance
5. Polymorphism
6. Data Abstraction
7. Encapsulation



Class
====== 
It is a logical entity that encapsulates attributes and methods.

Attributes: Variables that hold data associated with a class or an instance.
Methods: Functions that define the behavior of a class or an instance. Methods operate on the data (attributes) within the class.

For example: if you have an employee class, then it should contain an attribute and method, i.e. name, age, salary, etc.

class ClassName:     
        <attributes>     
        .     
        .      
        <methods> 



Object
========
An instance of a class. It is a specific entity created from a class.


Encapsulation 
==============
Bundling the data (attributes) and the methods that operate on the data into a single unit (class). 
It also involves restricting access to certain components to prevent unintended interference.

Abstraction 
============
Hiding complex implementation details and showing only essential features of the object to the user.


Inheritance
============
A way to create new classes that are based on existing classes. 
The new class inherits the attributes and methods of the parent class, and can also have additional features.


Polymorphism
============= 
The ability to use a single method or function name to perform different tasks depending on the object it is acting upon.

